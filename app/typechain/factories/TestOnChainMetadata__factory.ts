/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestOnChainMetadata,
  TestOnChainMetadataInterface,
} from "../TestOnChainMetadata";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_deedNo",
        type: "string",
      },
      {
        internalType: "string",
        name: "_assetID",
        type: "string",
      },
      {
        internalType: "string",
        name: "_issuerID",
        type: "string",
      },
      {
        internalType: "string",
        name: "_projectID",
        type: "string",
      },
    ],
    name: "formatTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105dd806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f66d61a314610030575b600080fd5b61004361003e3660046102d2565b610059565b60405161005091906103af565b60405180910390f35b606061006785858585610070565b95945050505050565b60606100a08585858560405160200161008c94939291906103e2565b6040516020818303038152906040526100c9565b6040516020016100b091906104b3565b6040516020818303038152906040529050949350505050565b60608151600014156100e957505060408051602081019091526000815290565b60006040518060600160405280604081526020016105686040913990506000600384516002610118919061050e565b6101229190610526565b61012d906004610548565b9050600061013c82602061050e565b67ffffffffffffffff8111156101545761015461022f565b6040519080825280601f01601f19166020018201604052801561017e576020820181803683370190505b509050818152600183018586518101602084015b818310156101ea576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101610192565b600389510660018114610204576002811461021557610221565b613d3d60f01b600119830152610221565b603d60f81b6000198301525b509398975050505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261025657600080fd5b813567ffffffffffffffff808211156102715761027161022f565b604051601f8301601f19908116603f011681019082821181831017156102995761029961022f565b816040528381528660208588010111156102b257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080608085870312156102e857600080fd5b843567ffffffffffffffff8082111561030057600080fd5b61030c88838901610245565b9550602087013591508082111561032257600080fd5b61032e88838901610245565b9450604087013591508082111561034457600080fd5b61035088838901610245565b9350606087013591508082111561036657600080fd5b5061037387828801610245565b91505092959194509250565b60005b8381101561039a578181015183820152602001610382565b838111156103a9576000848401525b50505050565b60208152600082518060208401526103ce81604085016020870161037f565b601f01601f19169190910160400192915050565b6a3d913232b2b22737911d1160a91b8152845160009061040981600b850160208a0161037f565b6d1116101130b9b9b2ba24a2111d1160911b600b918401918201528551610437816019840160208a0161037f565b6d11161134b9b9bab2b924a2111d1160911b60199290910191820152845161046681602784016020890161037f565b6e111611383937b532b1ba24a2111d1160891b60279290910191820152835161049681603684016020880161037f565b61227d60f01b603692909101918201526038019695505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000008152600082516104eb81601d85016020870161037f565b91909101601d0192915050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610521576105216104f8565b500190565b60008261054357634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610562576105626104f8565b50029056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122055813ebc458b7a3b3a3e0a087b43f18f62904e8c4a8adfafc2773296a0b17bcc64736f6c634300080b0033";

export class TestOnChainMetadata__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestOnChainMetadata> {
    return super.deploy(overrides || {}) as Promise<TestOnChainMetadata>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestOnChainMetadata {
    return super.attach(address) as TestOnChainMetadata;
  }
  connect(signer: Signer): TestOnChainMetadata__factory {
    return super.connect(signer) as TestOnChainMetadata__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestOnChainMetadataInterface {
    return new utils.Interface(_abi) as TestOnChainMetadataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestOnChainMetadata {
    return new Contract(address, _abi, signerOrProvider) as TestOnChainMetadata;
  }
}
